/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoppingmall;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import static java.util.Calendar.MONTH;
import static java.util.Calendar.YEAR;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static shoppingmall.MainMenu.username;
import static shoppingmall.Restaurant.con;
import static shoppingmall.Restaurant.connectionUrl;
import static shoppingmall.Restaurant.stmt;
import static shoppingmall.Restaurant.username;

/**
 *
 * @author MH
 */
public class CheckinFeedback extends javax.swing.JFrame {
        public static String connectionUrl;
        public static Connection con = null;
        public static java.sql.Statement stmt = null;

    /**
     * Creates new form CheckinFeedback
     */
    
    public static String username=null;
    
    public CheckinFeedback() {
        initComponents();
        setSize(1050,720);
        connectDb();
        RestaurantListbyName();
        ListAvg();
        ListFeedback();  
    }
    
    public CheckinFeedback(String myusername) {
        username = myusername;
        System.out.println("This is CheckinFeedback, your username is: "+username);
        initComponents();
        setSize(1050,720);
        connectDb();
        RestaurantListbyName();
        ListAvg();
        ListFeedback();  
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        YEAR = new javax.swing.JComboBox<>();
        MONTH = new javax.swing.JComboBox<>();
        DAY = new javax.swing.JComboBox<>();
        HOUR = new javax.swing.JComboBox<>();
        MIN = new javax.swing.JComboBox<>();
        Current = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        cost = new javax.swing.JTextField();
        feedback = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantinfo_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ratinginfo_table = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        feedback_table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        YEAR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010" }));
        getContentPane().add(YEAR);
        YEAR.setBounds(80, 300, 70, 22);

        MONTH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        getContentPane().add(MONTH);
        MONTH.setBounds(230, 300, 60, 22);

        DAY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(DAY);
        DAY.setBounds(360, 300, 60, 22);

        HOUR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        getContentPane().add(HOUR);
        HOUR.setBounds(80, 390, 60, 22);

        MIN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        getContentPane().add(MIN);
        MIN.setBounds(230, 390, 60, 22);

        Current.setText("Current time");
        getContentPane().add(Current);
        Current.setBounds(34, 428, 101, 25);

        jLabel1.setText("Cost per person:");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(550, 100, 96, 16);
        getContentPane().add(cost);
        cost.setBounds(660, 100, 91, 22);
        getContentPane().add(feedback);
        feedback.setBounds(548, 172, 452, 22);

        jLabel2.setText("Write a feedback:");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(548, 149, 102, 16);

        restaurantinfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Restaurant Name", "Cuisine"
            }
        ));
        jScrollPane1.setViewportView(restaurantinfo_table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(34, 122, 421, 131);

        jButton1.setText("Check-in");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(374, 451, 81, 25);

        jLabel3.setText("Enter the date of your check-in.");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(34, 271, 180, 16);

        jLabel4.setBackground(new java.awt.Color(255, 204, 102));
        jLabel4.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("RESTAURANT FEEDBACK");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(620, 30, 300, 33);

        jButton2.setText("Send Feedback");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(880, 201, 120, 25);

        ratinginfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Restaurant Name", "Average Cost Per Person"
            }
        ));
        jScrollPane2.setViewportView(ratinginfo_table);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(550, 490, 452, 146);

        feedback_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Restaurant Name", "Feedback"
            }
        ));
        jScrollPane3.setViewportView(feedback_table);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(548, 291, 452, 149);

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(940, 650, 59, 25);

        jLabel5.setBackground(new java.awt.Color(255, 204, 102));
        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel5.setText("FEEDBACK");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(720, 260, 100, 22);

        jLabel6.setBackground(new java.awt.Color(255, 204, 102));
        jLabel6.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("RESTAURANT CHECK-IN");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(110, 30, 310, 33);

        jLabel7.setBackground(new java.awt.Color(255, 204, 102));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Select the restaurant you want to check-in at.");
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 90, 290, 17);

        jLabel8.setText("Year:");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(40, 300, 31, 20);

        jLabel9.setText("Month:");
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(180, 300, 40, 20);

        jLabel10.setText("Day:");
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10);
        jLabel10.setBounds(318, 303, 30, 20);

        jLabel11.setText("Enter the time of your check-in.");
        jLabel11.setOpaque(true);
        getContentPane().add(jLabel11);
        jLabel11.setBounds(34, 354, 190, 16);

        jLabel12.setText("Hour:");
        jLabel12.setOpaque(true);
        getContentPane().add(jLabel12);
        jLabel12.setBounds(40, 390, 32, 20);

        jLabel13.setText("Minute:");
        jLabel13.setOpaque(true);
        getContentPane().add(jLabel13);
        jLabel13.setBounds(180, 390, 43, 20);
        getContentPane().add(jLabel14);
        jLabel14.setBounds(463, 382, 0, 0);

        jLabel15.setBackground(new java.awt.Color(255, 204, 102));
        jLabel15.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel15.setText("AVERAGE COST PER PERSON");
        jLabel15.setOpaque(true);
        getContentPane().add(jLabel15);
        jLabel15.setBounds(640, 460, 270, 22);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoppingmall/8.jpg"))); // NOI18N
        getContentPane().add(jLabel16);
        jLabel16.setBounds(0, -10, 1050, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CheckIn();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Feedback();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        RestaurantMenu restmen = new RestaurantMenu(username);
        restmen.setVisible(true);
        setVisible(false); 
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckinFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckinFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckinFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckinFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckinFeedback().setVisible(true);
            }
        });
    }
    
    public static boolean isNumeric(String strNum) {
    if (strNum == null) {
        return false;
    }
    try {
        double d = Double.parseDouble(strNum);
    } catch (NumberFormatException nfe) {
        return false;
    }
    return true;
    }
    
    private void connectDb () {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connectionUrl = "jdbc:mysql://localhost/shoppingmall?serverTimezone=UTC&" + "user=" + "root" + "&password=" + "root";
            con = DriverManager.getConnection(connectionUrl);
            stmt = con.createStatement();
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
        catch (ClassNotFoundException cE) {
            System.out.println("Class Not Found Exception: "+ cE.toString());
        }
    }
    
    private void RestaurantListbyName(){
        try{
            DefaultTableModel model = (DefaultTableModel) restaurantinfo_table.getModel();
            model.setRowCount(0);
            String query = "SELECT restaurant_name, cuisine_type FROM restaurant ORDER BY restaurant_name";
            ResultSet rs = stmt.executeQuery(query);
            
            while (rs.next()) {
                String shop_name = rs.getString(1);
                String cuisine_type = rs.getString(2);
                model = (DefaultTableModel) restaurantinfo_table.getModel();
                model.addRow(new Object[]{shop_name, cuisine_type});
                restaurantinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void CheckIn() {
        try {
            String Date;
            String Time;
            if (!(Current.isSelected())&&(YEAR.getSelectedIndex()==-1||MONTH.getSelectedIndex()==-1||DAY.getSelectedIndex()==-1||HOUR.getSelectedIndex()==-1||MIN.getSelectedIndex()==-1)) {
                    JOptionPane.showMessageDialog(null, " Please make sure to enter a date!");
            } else {
            if(Current.isSelected()) {
               Date=java.time.LocalDate.now().toString(); 
               Time=java.time.LocalTime.now().toString().substring(0, 5);
            } else {
                Date=YEAR.getSelectedItem().toString()+"-"+MONTH.getSelectedItem().toString()+"-"+DAY.getSelectedItem().toString();
                Time=HOUR.getSelectedItem().toString()+MIN.getSelectedItem().toString();
            }
            int row = restaurantinfo_table.getSelectedRow();
            String restchosen = restaurantinfo_table.getModel().getValueAt(row, 0).toString();
            //System.out.println(Date);
            //System.out.println(Time);
            int count=0;
            String query="Select COUNT(*) from check_in_restaurant where visitor_username='"+username+"'and restaurant_name='"+restchosen+"' and check_in_date = '"+Date+"'";
            ResultSet rs = stmt.executeQuery(query);
            
            if(rs.next()) {
                count = Integer.parseInt(rs.getString(1));
                System.out.println(rs.getString(1));
            }
            Integer p=20;
            if (count>=1) {
             p=10;   
            }
            String point = p.toString();

            String insert= "Insert INTO check_in_restaurant VALUES ('"+username+"','"+restchosen+"','"+Date+"','"+Time+"',"+point+")";
            //System.out.println(query);
            String update= "UPDATE visitor Set loyalty_points=loyalty_points+ "+point+" where visitor_username='"+username+"'";
            //System.out.println(query);
            stmt.executeUpdate(insert);
            stmt.executeUpdate(update);
            JOptionPane.showMessageDialog(null, "Thank you "+username+" for your check-in at "+restchosen+", "+point+" LOYALTY POINTS were added to your loyalty card!");
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(Restaurant.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    
    private void Feedback() {
         try {
            String Date;
            String Time;
            if (!(Current.isSelected())&&(YEAR.getSelectedIndex()==-1||MONTH.getSelectedIndex()==-1||DAY.getSelectedIndex()==-1||HOUR.getSelectedIndex()==-1||MIN.getSelectedIndex()==-1)) {
                 JOptionPane.showMessageDialog(null, "Please make sure to enter a date!");
            } else{
            if(Current.isSelected()) {
                  Date=java.time.LocalDate.now().toString(); 
                  Time=java.time.LocalTime.now().toString().substring(0, 5);
            }
            else {
                 Date=YEAR.getSelectedItem().toString()+"-"+MONTH.getSelectedItem().toString()+"-"+DAY.getSelectedItem().toString();
                 Time=HOUR.getSelectedItem().toString()+MIN.getSelectedItem().toString();
            }
            int row = restaurantinfo_table.getSelectedRow();
            String restchosen = restaurantinfo_table.getModel().getValueAt(row, 0).toString();
           //System.out.println(Date);
           //System.out.println(Time);
           int count=0;
           String query="Select COUNT(*) from check_in_restaurant where visitor_username='"+username+"'and restaurant_name='"+restchosen+"' and check_in_date = '"+Date+"'";
           //System.out.println(query+"///////");
           ResultSet rs = stmt.executeQuery(query);
           if(rs.next()) {
                count = Integer.parseInt(rs.getString(1));
                //System.out.println(rs.getString(1));
                //System.out.println(rs.getString(1));
           }
           if (count==0) {
               JOptionPane.showMessageDialog(null, "Dear"+username+", you can't make feedback for "+restchosen+". Make sure to visit the restaurant same day!");
           }else if (cost.getText().trim().isEmpty()||feedback.getText().trim().isEmpty()) {
               JOptionPane.showMessageDialog(null,"Please make sure to enter missing data.");
           }else if (!isNumeric(cost.getText())) {
              JOptionPane.showMessageDialog(null,"Please enter a numeric cost.");  
           }else {
                String insert= "INSERT INTO RESTAURANT_FEEDBACK (visitor_username, restaurant_name, cost_per_person, feedback) VALUES " +
                        "('"+username+"','"+restchosen+"',"+cost.getText()+",'"+feedback.getText()+"')";
                //System.out.println(querr2);
                stmt.executeUpdate(insert);
                JOptionPane.showMessageDialog(null,"Thank you "+username+" for your feedback!");
           }
           ListAvg();
           ListFeedback();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Restaurant.class.getName()).log(Level.SEVERE, null, ex);
        }
}

    private void ListAvg() {
        try { 
            DefaultTableModel model = (DefaultTableModel) ratinginfo_table.getModel();
            model.setRowCount(0);
            String query= "SELECT restaurant_name, AVG(cost_per_person) from RESTAURANT_FEEDBACK group by restaurant_name ";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String restname = rs.getString(1);
                double AVG = rs.getDouble(2);
                model = (DefaultTableModel) ratinginfo_table.getModel();
                model.addRow(new Object[]{restname, AVG});
                ratinginfo_table.setModel(model);
            }
        }catch (SQLException ex) {
            Logger.getLogger(Restaurant.class.getName()).log(Level.SEVERE, null, ex);
        }
}

    private void ListFeedback() {
        try { 
            DefaultTableModel model = (DefaultTableModel) feedback_table.getModel();
            model.setRowCount(0);
            String query= "SELECT restaurant_name,feedback from RESTAURANT_FEEDBACK ORDER BY restaurant_name ";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String restname = rs.getString(1);
                String feedback = rs.getString(2);
                model = (DefaultTableModel) feedback_table.getModel();
                model.addRow(new Object[]{restname, feedback});
                feedback_table.setModel(model);
            }
        }catch (SQLException ex) {
            Logger.getLogger(Restaurant.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Current;
    private javax.swing.JComboBox<String> DAY;
    private javax.swing.JComboBox<String> HOUR;
    private javax.swing.JComboBox<String> MIN;
    private javax.swing.JComboBox<String> MONTH;
    private javax.swing.JComboBox<String> YEAR;
    private javax.swing.JTextField cost;
    private javax.swing.JTextField feedback;
    private javax.swing.JTable feedback_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable ratinginfo_table;
    private javax.swing.JTable restaurantinfo_table;
    // End of variables declaration//GEN-END:variables
}
