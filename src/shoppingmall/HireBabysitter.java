/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoppingmall;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static shoppingmall.LoyaltyProgramOffers.con;
import static shoppingmall.LoyaltyProgramOffers.connectionUrl;
import static shoppingmall.LoyaltyProgramOffers.stmt;
import static shoppingmall.MainMenu.username;
import static shoppingmall.PlaygroundReservation.username;

/**
 *
 * @author MH
 */
public class HireBabysitter extends javax.swing.JFrame {
    public static String connectionUrl;
    public static Connection con = null;
    public static java.sql.Statement stmt = null;

    /**
     * Creates new form HireBabysitter
     */
    
    public static String username=null; 
    
    public HireBabysitter() {
        initComponents();
        setSize(735,460);
        connectDb();
        ListBabysitter();
    }
    
    public HireBabysitter(String myusername) {
        username = myusername;
        System.out.println("This is HreBabysitter, your username is: "+username);
        initComponents();
        setSize(735,460);
        connectDb();
        ListBabysitter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        babysitter_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        paid_textArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        babysitter_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Babysitter Name", "Fee Per Kid Per Hour", "Start Time", "End Time"
            }
        ));
        jScrollPane1.setViewportView(babysitter_table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(68, 61, 525, 123);

        jLabel1.setBackground(new java.awt.Color(255, 204, 102));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Select the babysitter name you want to hire then click on the following button:");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 230, 480, 16);

        jButton2.setText("Hire");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(530, 230, 55, 25);

        paid_textArea.setColumns(20);
        paid_textArea.setRows(5);
        getContentPane().add(paid_textArea);
        paid_textArea.setBounds(68, 306, 164, 23);

        jLabel2.setText("Total amount paid");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(68, 283, 104, 16);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(592, 342, 59, 25);

        jLabel3.setBackground(new java.awt.Color(255, 204, 102));
        jLabel3.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("HIRE A BABYSITTER");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(130, 10, 230, 33);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoppingmall/32.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, -120, 730, 683);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        HireBabysitter();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PlaygroundMenu pmenu = new PlaygroundMenu(username);
        pmenu.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HireBabysitter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HireBabysitter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HireBabysitter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HireBabysitter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HireBabysitter().setVisible(true);
            }
        });
    }
    
    private void connectDb () {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            //java.io.File file  = new java.io.File("UserPass.txt");
            //Scanner input = new Scanner (file);
            //String username = input.nextLine();
            //System.out.println(username);
            //String password = input.nextLine();
            //System.out.println(password);
            connectionUrl = "jdbc:mysql://localhost/shoppingmall?serverTimezone=UTC&" + "user=" + "root" + "&password=" + "root";
            con = DriverManager.getConnection(connectionUrl);
            stmt = con.createStatement();
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
        catch (ClassNotFoundException cE) {
            System.out.println("Class Not Found Exception: "+ cE.toString());
        }
    }
    private void ListBabysitter() {
        try {
            DefaultTableModel model = (DefaultTableModel) babysitter_table.getModel();
            model.setRowCount(0);
            String query = "SELECT * " +
                           "FROM babysitter b NATURAL JOIN babysitter_timeslots bt " + 
                           "ORDER BY b.babysitter_name ASC";
                ResultSet rs = stmt.executeQuery(query);
                while (rs.next()) {
                    String babysitter_name = rs.getString(1);
                    String fee_kid_hour = rs.getString(2);
                    String start_time = rs.getString(3);
                    String end_time = rs.getString(4);
                    model = (DefaultTableModel) babysitter_table.getModel();
                    model.addRow(new Object[]{babysitter_name, fee_kid_hour, start_time, end_time});
                    babysitter_table.setModel(model);
                }
        }
         catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    private void HireBabysitter() {
        try{
            String bs_starttime_str= null, bs_endtime_str=null, feeperkid_str=null, nbkids_str=null, mycash_str=null;
            int visit_id=-1;
            
            int row = babysitter_table.getSelectedRow();
            String babysitter_name = babysitter_table.getModel().getValueAt(row, 0).toString();
            feeperkid_str = babysitter_table.getModel().getValueAt(row, 1).toString();
            bs_starttime_str = babysitter_table.getModel().getValueAt(row, 2).toString();
            bs_endtime_str = babysitter_table.getModel().getValueAt(row, 3).toString();
            
            /*String query = "SELECT start_time, end_time, fee_kid_hour " +
                            "FROM babysitter " + 
                            "WHERE babysitter_name = '" + babysitter_name + "'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                bs_starttime_str = rs.getString(1);
                bs_endtime_str = rs.getString(2);
                feeperkid_str = rs.getString(3);
            }*/

            char[] starttemp = new char[8];
            char[] endtemp = new char[8];
            for (int i = 0; i <= 7; i++) { 
                starttemp[i]=bs_starttime_str.charAt(i);
                endtemp[i]=bs_endtime_str.charAt(i);
                //System.out.println(i+ " "+starttemp[i]);
            }
            char[] bs_starttime_char = new char[2]; 
            char[] bs_endtime_char = new char[2];
            
            for (int i = 0; i <= 1; i++) { 
                bs_starttime_char[i] = starttemp[i]; 
                bs_endtime_char[i] = endtemp[i] ; 
            }

            float bs_starttime = (float) Integer.parseInt(new String(bs_starttime_char));
            float bs_endtime = (float) Integer.parseInt(new String(bs_endtime_char));

            float feeperkid = Float.valueOf(feeperkid_str);
            float totalhours = bs_endtime - bs_starttime;
            System.out.println(totalhours);
            
            String query = "SELECT visit_id " +
                            "FROM kids_playground";
            
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                visit_id = rs.getInt(1);
            }
            
            query = "SELECT nb_of_kids " +
                            "FROM one_time_visitor " + 
                            "WHERE visit_id = " + visit_id;
            rs = stmt.executeQuery(query);
            
            while (rs.next()) {
                nbkids_str = rs.getString(1);
            }
            
            float nbkids = (float) Integer.parseInt(nbkids_str);
            float payment_due = feeperkid*totalhours*nbkids;
            query = "SELECT cash_balance " +
                            "FROM visitor " + 
                            "WHERE visitor_username = '" + username + "'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                mycash_str = rs.getString(1);
            }  
            float mycash = Float.parseFloat(mycash_str);
            if (payment_due > mycash) {
                JOptionPane optionPane = new JOptionPane("You do not have enough cash to pay for the babysitter.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            else {
                JOptionPane optionPane = new JOptionPane("You have successfuly payed for the babysitter!");
                JDialog dialog = optionPane.createDialog("SUCCESS!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
            }
            String payment_due_str=String.valueOf(payment_due);
            paid_textArea.setText(payment_due_str);
            String update = "UPDATE visitor " +
                    "SET cash_balance = cash_balance - " + payment_due + " " +
                    "WHERE visitor_username = '" + username + "' AND cash_balance >= " + payment_due;
            int temp = stmt.executeUpdate(update);
            
            update = "DELETE FROM babysitter_timeslots " +
                    "WHERE babysitter_name = '" + babysitter_name + "' AND start_time = '" + bs_starttime_str + "' AND end_time = '" + bs_endtime_str + "'";
            temp = stmt.executeUpdate(update);
            ListBabysitter();
            
            String insert = "INSERT INTO hire_babysitter VALUES " +
                            "('" + visit_id + "', '" + babysitter_name + "')";
            temp = stmt.executeUpdate(insert);
            ListBabysitter();
            
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable babysitter_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea paid_textArea;
    // End of variables declaration//GEN-END:variables
}
