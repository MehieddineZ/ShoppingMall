/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoppingmall;

import static shoppingmall.MovieRating.stmt;
import static shoppingmall.MovieSearch.stmt;
import static shoppingmall.ShopsList.stmt;
import static shoppingmall.ShopsList.username;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static shoppingmall.DishSearch.stmt;
import static shoppingmall.DishSearch.username;
import static shoppingmall.RemoveItemReservation.username;

/**
 *
 * @author Ahmad Mourad
 */
public class ItemSearch extends javax.swing.JFrame {
    public static String connectionUrl;
    public static Connection con = null;
    public static Statement stmt = null;
    /**
     * Creates new form ItemSearch
     */
    
    public static String username=null;
    
    public ItemSearch() {
        initComponents();
        setSize(950,580);
        connectDb();
        shopListbyName();
    }
    
    public ItemSearch(String myusername) {
        username = myusername;
        System.out.println("This is ItemsSearch, your username is: "+username);
        initComponents();
        setSize(950,580);
        connectDb();
        shopListbyName();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        iteminfo_table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        shopsinfo_table = new javax.swing.JTable();
        cat_comboBox = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 204, 102));
        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("SHOPS CATALOGUES");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(350, 10, 260, 26);

        iteminfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Shop ", "Item ID", "Item Type", "Color", "Size", "Prices", "Available Number"
            }
        ));
        jScrollPane1.setViewportView(iteminfo_table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 290, 859, 122);

        shopsinfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Shop Name", "Category"
            }
        ));
        shopsinfo_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shopsinfo_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(shopsinfo_table);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(200, 70, 552, 132);

        cat_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Clothing", "Home", "Accessories", "Selfcare", "Cosmetics", "Shoes" }));
        getContentPane().add(cat_comboBox);
        cat_comboBox.setBounds(572, 215, 94, 22);

        jButton2.setText("Choose");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(672, 214, 75, 25);

        jButton3.setText("RESERVE ITEM");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(209, 501, 119, 25);

        jButton1.setText("BUY ITEM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(569, 501, 87, 25);

        jLabel3.setBackground(new java.awt.Color(255, 204, 102));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Reserve an item (only one item per shop!)");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(160, 470, 257, 17);

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(872, 514, 59, 25);

        jLabel4.setBackground(new java.awt.Color(255, 204, 102));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("You can filter the shops by a specific category:");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(270, 218, 290, 17);

        jLabel6.setBackground(new java.awt.Color(255, 204, 102));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Buy an item (reservation is a must!)");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(510, 470, 217, 17);

        jLabel2.setBackground(new java.awt.Color(255, 204, 102));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Select an item to RESERVE it or BUY it, or BOTH!");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(270, 420, 430, 22);

        jLabel7.setBackground(new java.awt.Color(255, 204, 102));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Select a shop to display its items.");
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(200, 50, 200, 17);

        jLabel8.setBackground(new java.awt.Color(255, 204, 102));
        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel8.setText("ITEMS");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(410, 260, 60, 22);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoppingmall/27.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, -10, 950, 786);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        shopListbyCat();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void shopsinfo_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shopsinfo_tableMouseClicked
        // TODO add your handling code here:
        itemAvailability();
    }//GEN-LAST:event_shopsinfo_tableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        reserveItem();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        BuyItem();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        ShopMenu smenu = new ShopMenu(username);
        smenu.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemSearch().setVisible(true);
            }
        });
    }

    private void connectDb () {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            //java.io.File file  = new java.io.File("UserPass.txt");
            //Scanner input = new Scanner (file);
            //String username = input.nextLine();
            //System.out.println(username);
            //String password = input.nextLine();
            //System.out.println(password);
            connectionUrl = "jdbc:mysql://localhost/shoppingmall?serverTimezone=UTC&" + "user=" + "root" + "&password=" + "root";
            con = DriverManager.getConnection(connectionUrl);
            stmt = con.createStatement();
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
        catch (ClassNotFoundException cE) {
            System.out.println("Class Not Found Exception: "+ cE.toString());
        }
    }
    
    private void shopListbyName(){
        try{
            DefaultTableModel model = (DefaultTableModel) shopsinfo_table.getModel();
            model.setRowCount(0);
            String query = "SELECT shop_name, category, location, phone, opening_time, closing_time FROM shop ORDER BY shop_name";
            ResultSet rs = stmt.executeQuery(query);
            
            while (rs.next()) {
                String shop_name = rs.getString(1);
                String category = rs.getString(2);
                String location = rs.getString(3);
                String phone = rs.getString(4);
                String opening_time = rs.getString(5);
                String closing_time = rs.getString(6); 
                model = (DefaultTableModel) shopsinfo_table.getModel();
                model.addRow(new Object[]{shop_name, category, location, phone, opening_time, closing_time});
                shopsinfo_table.setModel(model);
            }

        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void shopListbyCat(){
        try{
            DefaultTableModel model = (DefaultTableModel) shopsinfo_table.getModel();
            model.setRowCount(0);
            String chosencat=null;
            Object selectedItem = cat_comboBox.getSelectedItem();
            if (selectedItem != null) 
                chosencat = selectedItem.toString();
            String query = "SELECT shop_name, category FROM shop WHERE category = '" + chosencat + "' ORDER BY shop_name";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String shop_name = rs.getString(1);
                String category = rs.getString(2);
                model = (DefaultTableModel) shopsinfo_table.getModel();
                model.addRow(new Object[]{shop_name, category});
                shopsinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    

    private void itemAvailability() {
        try{
            DefaultTableModel model = (DefaultTableModel) iteminfo_table.getModel();
            model.setRowCount(0);
            int row = shopsinfo_table.getSelectedRow();
            String shopchosen = shopsinfo_table.getModel().getValueAt(row, 0).toString();
            
            String query = "SELECT shop_name, item_id, item_type, color, size, price, nb_available FROM ITEMS WHERE shop_name='"+shopchosen+"'";
            
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String shop_name = rs.getString(1);
                int item_id = rs.getInt(2);
                String item_type = rs.getString(3);
                String color = rs.getString(4);
                String size = rs.getString(5);
                int price = rs.getInt(6);
                int nb_available = rs.getInt(7);
                model = (DefaultTableModel) iteminfo_table.getModel();
                model.addRow(new Object[]{shop_name, item_id, item_type, color, size, price, nb_available});
                iteminfo_table.setModel(model);
            }

        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void reserveItem() {
        try{
            int nb_available = 0;
            String hasreserved=null;
            
            int row = iteminfo_table.getSelectedRow();
            String shopchosen = iteminfo_table.getModel().getValueAt(row, 0).toString();
            String itemid_str = iteminfo_table.getModel().getValueAt(row, 1).toString();
            int itemid = Integer.parseInt(itemid_str);
            
            String query = "SELECT nb_available FROM items WHERE shop_name='"+shopchosen+"' AND item_id = " + itemid;
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                nb_available = rs.getInt(1);
            }
            if (nb_available==0) {
                JOptionPane optionPane = new JOptionPane("This item is out of stock.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }

            query = "SELECT visitor_username FROM reserve_item WHERE shop_name='"+shopchosen+"'";
            rs = stmt.executeQuery(query);
            int count=0;
            while (rs.next()) {
                hasreserved = rs.getString(1);
                System.out.println(hasreserved);
                if (hasreserved.equals(username))
                    count++;
            }

            if (count==1) {
                JOptionPane optionPane = new JOptionPane("You cannot reserve more than one item per shop.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            
            String insert = "INSERT INTO reserve_item (visitor_username, shop_name, item_id) VALUES " +
                     "('" + username + "', '" + shopchosen + "', " + itemid + ")";
            int temp = stmt.executeUpdate(insert); 
            
            String update = "UPDATE items " +
                    "SET nb_available = nb_available -1 " +
                    "WHERE shop_name = '" + shopchosen + "' AND item_id = '"+ itemid + "'";
            temp = stmt.executeUpdate(update);
            
            JOptionPane optionPane = new JOptionPane("You have successfully reserved the item!");
            JDialog dialog = optionPane.createDialog("SUCCESS!");
            dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
            dialog.setVisible(true);
            
            itemAvailability();
            
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void BuyItem(){
        try{            
            double price=0;
            float mycash=0;
            int row = iteminfo_table.getSelectedRow();
            String shopchosen = iteminfo_table.getModel().getValueAt(row, 0).toString();
            String itemid_str = iteminfo_table.getModel().getValueAt(row, 1).toString();
            int itemid = Integer.parseInt(itemid_str);
            
            int count=0;
            String query="SELECT COUNT(*) FROM reserve_item WHERE shop_name = '"+ shopchosen + "' AND item_id = " + itemid +" AND visitor_username = '"+username+"'";
            ResultSet rs = stmt.executeQuery(query);
            if (rs.next()) {
                     count=rs.getInt(1);
            }
            if (count==0) {
                JOptionPane.showMessageDialog(null, "You cannot buy an item unless you reserve it first.");
                return;
            }
            
            query="SELECT price FROM items WHERE shop_name = '"+ shopchosen + "' AND item_id = " + itemid;
            rs = stmt.executeQuery(query);
            if (rs.next()) {
                     price=rs.getDouble(1);
            }
            
            query = "SELECT cash_balance " +
                            "FROM visitor " + 
                            "WHERE visitor_username = '" + username + "'";
            rs = stmt.executeQuery(query);
            if (rs.next()) {
                mycash = rs.getFloat(1);
            }

            if (price > mycash) {
                JOptionPane optionPane = new JOptionPane("You do not have enough cash to buy tickets. Please recharge your cash balance.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            
            query = "SELECT visitor_username " +
                        "FROM buy_item " + 
                        "WHERE visitor_username = '" + username + "' AND shop_name = '" + shopchosen + "' AND item_id = " + itemid;
                rs = stmt.executeQuery(query);
                int count2=0;
                String hasbought=null;
                while (rs.next()) {
                    hasbought = rs.getString(1);
                    
                    if (hasbought.equals(username))
                    {
                        count2++;
                    }
                }

            if (count2==1) {
                JOptionPane optionPane = new JOptionPane("You cannot buy an item more than oncee. Please unreserve it");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }

           String delete="DELETE FROM reserve_item WHERE shop_name = '"+ shopchosen + "' AND item_id = " + itemid +" AND visitor_username = '"+username+"'";
           stmt.executeUpdate(delete);
           
           String insert = "INSERT INTO buy_item (shop_name, item_id, visitor_username) VALUES " +
                           "('" + shopchosen + "', " + itemid + ", '" + username + "')";         
           stmt.executeUpdate(insert);
           
           String update="UPDATE visitor SET cash_balance=cash_balance-"+price+" where visitor_username='"+username+"'";
           stmt.executeUpdate(update);

           JOptionPane.showMessageDialog(null, "Your purchase was done successfully!");  

        } catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }                              

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cat_comboBox;
    private javax.swing.JTable iteminfo_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable shopsinfo_table;
    // End of variables declaration//GEN-END:variables
}
