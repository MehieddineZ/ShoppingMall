/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoppingmall;


import static shoppingmall.MovieSearch.con;
import static shoppingmall.MovieSearch.connectionUrl;
import static shoppingmall.MovieSearch.stmt;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static shoppingmall.MainMenu.username;
import static shoppingmall.MovieSearch.username;

/**
 *
 * @author Ahmad Mourad
 */



public class MovieRating extends javax.swing.JFrame {
    public static String connectionUrl;
    public static Connection con = null;
    public static Statement stmt = null;
    /**
     * Creates new form MovieRating
     */
    
    public static String username=null;
    
    public MovieRating() {
        initComponents();
        setSize(810,600);
        connectDb();
        MoviesAvgRating();
    }
    
    public MovieRating(String myusername) {
        username = myusername;
        System.out.println("This is MovieRating, your username is: "+username);        
        initComponents();
        setSize(810,600);
        connectDb();
        MoviesAvgRating();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ratingBt = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ratinginfo_table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        movieinfo_table = new javax.swing.JTable();
        movieName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        movieType = new javax.swing.JTextField();
        rating_comboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 204, 102));
        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("MOVIE RATING");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(300, 30, 190, 32);

        ratingBt.setText("Rate");
        ratingBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingBtActionPerformed(evt);
            }
        });
        getContentPane().add(ratingBt);
        ratingBt.setBounds(271, 386, 59, 25);

        jLabel3.setBackground(new java.awt.Color(255, 204, 102));
        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel3.setText("Movie Rating Information");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(400, 350, 240, 25);

        ratinginfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie", "Rating"
            }
        ));
        jScrollPane1.setViewportView(ratinginfo_table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(416, 383, 216, 133);

        movieinfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie", "Type"
            }
        ));
        jScrollPane2.setViewportView(movieinfo_table);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(180, 189, 452, 136);

        movieName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                movieNameKeyPressed(evt);
            }
        });
        getContentPane().add(movieName);
        movieName.setBounds(310, 100, 176, 22);

        jLabel2.setBackground(new java.awt.Color(255, 204, 102));
        jLabel2.setText("Search a movie by name");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(330, 80, 142, 16);

        jLabel4.setBackground(new java.awt.Color(255, 204, 102));
        jLabel4.setText("Search a movie by type");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(330, 130, 134, 16);

        movieType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                movieTypeKeyPressed(evt);
            }
        });
        getContentPane().add(movieType);
        movieType.setBounds(310, 150, 176, 22);

        rating_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        rating_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rating_comboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(rating_comboBox);
        rating_comboBox.setBounds(189, 387, 50, 22);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(715, 491, 59, 25);

        jLabel5.setBackground(new java.awt.Color(255, 204, 102));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("You can rate a movie you have bought tickets for!");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(70, 355, 320, 17);

        jLabel6.setText("Enter your rating:");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(70, 390, 101, 20);

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Desktop\\CMPS Images\\42.jpg")); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, -10, 810, 1181);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ratingBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratingBtActionPerformed
        // TODO add your handling code here:
        ratemovie();
    }//GEN-LAST:event_ratingBtActionPerformed

    private void rating_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rating_comboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rating_comboBoxActionPerformed

    private void movieNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movieNameKeyPressed
        // TODO add your handling code here:
        movie_search_title();
    }//GEN-LAST:event_movieNameKeyPressed

    private void movieTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movieTypeKeyPressed
        // TODO add your handling code here:
        movie_search_type();
    }//GEN-LAST:event_movieTypeKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MovieMenu mmenu = new MovieMenu(username);
        mmenu.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieRating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieRating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieRating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieRating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieRating().setVisible(true);
            }
        });
    }
 
private void connectDb() {
    try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            //java.io.File file  = new java.io.File("UserPass.txt");
            //Scanner input = new Scanner (file);
            //String username = input.nextLine();
            //System.out.println(username);
            //String password = input.nextLine();
            //System.out.println(password);
            connectionUrl = "jdbc:mysql://localhost/shoppingmall?serverTimezone=UTC&" + "user=" + "root" + "&password=" + "root";
            con = DriverManager.getConnection(connectionUrl);
            stmt = con.createStatement();
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
        catch (ClassNotFoundException cE) {
            System.out.println("Class Not Found Exception: "+ cE.toString());
        }
    }

    private void movie_search_title() {
        try{
            DefaultTableModel model = (DefaultTableModel) movieinfo_table.getModel();
            model.setRowCount(0);
            String mov_name = movieName.getText();
            String query = "SELECT CM.movie_title, movie_type, age_requirement, ticket_fee, movie_date, start_time, end_time " +
                    "FROM cinema_movie CM JOIN movie_showtimes MS ON CM.movie_title = MS.movie_title WHERE CM.movie_title LIKE'"+mov_name+"%'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String movietitle = rs.getString(1);
                String movie_type= rs.getString(2);
                String age_requirement = rs.getString(3);
                String ticket_fee = rs.getString(4);
                String movie_date = rs.getString(5);
                String start_time = rs.getString(6);
                String end_time = rs.getString(7);
                model.addRow(new Object[]{movietitle, movie_type, age_requirement, ticket_fee, movie_date, start_time, end_time});
                movieinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }

    private void movie_search_type() {
        try{
            DefaultTableModel model = (DefaultTableModel) movieinfo_table.getModel();
            model.setRowCount(0);
            String mov_type = movieType.getText();
            String query = "SELECT CM.movie_title, movie_type, age_requirement, ticket_fee, movie_date, start_time, end_time " +
                    "FROM cinema_movie CM JOIN movie_showtimes MS ON CM.movie_title = MS.movie_title WHERE CM.movie_type LIKE'"+mov_type+"%'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String movietitle = rs.getString(1);
                String movie_type= rs.getString(2);
                String age_requirement = rs.getString(3);
                String ticket_fee = rs.getString(4);
                String movie_date = rs.getString(5);
                String start_time = rs.getString(6);
                String end_time = rs.getString(7);
                model.addRow(new Object[]{movietitle, movie_type, age_requirement, ticket_fee, movie_date, start_time, end_time});
                movieinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }

private void ratemovie() {
        try{
            String haswatched=null, rating_str=null;
            int row = movieinfo_table.getSelectedRow();
            String moviechosen = movieinfo_table.getModel().getValueAt(row, 0).toString();
            String query = "SELECT visitor_username " +
                            "FROM ticket_purchase " + 
                            "WHERE movie_title = '" + moviechosen + "' AND visitor_username = '" + username + "'";
            ResultSet rs = stmt.executeQuery(query);

            while (rs.next()) {
                haswatched = rs.getString(1);
            }
            
            if (haswatched==null) {
                JOptionPane optionPane = new JOptionPane("You cannot rate a movie if you haven't bought tickets for it.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            query = "SELECT visitor_username " +
                            "FROM movie_rating " + 
                            "WHERE movie_title = '" + moviechosen + "' AND visitor_username = '" + username + "'";
            rs = stmt.executeQuery(query);
            int count=0;
            while (rs.next()) {
                haswatched = rs.getString(1);
                System.out.println(haswatched);
                if (haswatched.equals(username))
                {
                    count++;
                }
            }

            if (count==1) {
                JOptionPane optionPane = new JOptionPane("You cannot rate a movie more than once.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
                
            
            Object selectedItem = rating_comboBox.getSelectedItem();
            if (selectedItem != null) 
                rating_str = selectedItem.toString();
             int rating = Integer.parseInt(rating_str);
             String insert = "INSERT INTO movie_rating (visitor_username, movie_title, star_rating) VALUES " +
                     "('" + username + "', '" + moviechosen + "', " + rating + ")";
            int temp = stmt.executeUpdate(insert); 
            JOptionPane optionPane = new JOptionPane("You have successfully rated the movie!");
                JDialog dialog = optionPane.createDialog("SUCCESS!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                MoviesAvgRating();
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    private void MoviesAvgRating() {
        try{
            DefaultTableModel model = (DefaultTableModel) ratinginfo_table.getModel();
            model.setRowCount(0);
            String query = "SELECT movie_title, AVG(star_rating) FROM MOVIE_RATING GROUP BY movie_title";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String movie_title = rs.getString(1);
                double AVG = rs.getDouble(2);
                model = (DefaultTableModel) ratinginfo_table.getModel();
                model.addRow(new Object[]{movie_title, AVG});
                ratinginfo_table.setModel(model);
            }

        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField movieName;
    private javax.swing.JTextField movieType;
    private javax.swing.JTable movieinfo_table;
    private javax.swing.JButton ratingBt;
    private javax.swing.JComboBox<String> rating_comboBox;
    private javax.swing.JTable ratinginfo_table;
    // End of variables declaration//GEN-END:variables
}
