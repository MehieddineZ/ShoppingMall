/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoppingmall;


import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static shoppingmall.ItemSearch.stmt;
import static shoppingmall.ItemSearch.username;
import static shoppingmall.MainMenu.username;
import static shoppingmall.MovieMenu.username;


/**
 *
 * @author Ahmad Mourad
 */
public class MovieSearch extends javax.swing.JFrame {
    public static String connectionUrl;
    public static Connection con = null;
    public static Statement stmt = null;
    /**
     * Creates new form MovieSearch
     */
    
    public static String username=null;
    
    public MovieSearch() {
        initComponents();
        setSize(665,550);
        connectDb();
    }
    
    public MovieSearch(String myusername) {
        username = myusername;
        System.out.println("This is MovieSearch, your username is: "+username);
        initComponents();
        setSize(665,550);
        connectDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        movieName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        movieinfo_table = new javax.swing.JTable();
        movieType = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nbtickets = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        paymentdue = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 204, 102));
        jLabel1.setText("Search a movie by name");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(250, 69, 154, 16);

        jLabel2.setBackground(new java.awt.Color(255, 204, 102));
        jLabel2.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("MOVIE SEARCH");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(230, 20, 200, 33);

        movieName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                movieNameKeyTyped(evt);
            }
        });
        getContentPane().add(movieName);
        movieName.setBounds(230, 90, 204, 22);

        movieinfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie", "Type", "Age", "Ticket fee", "Date", "Start Time", "End Time"
            }
        ));
        jScrollPane1.setViewportView(movieinfo_table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(12, 179, 630, 181);

        movieType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                movieTypeKeyTyped(evt);
            }
        });
        getContentPane().add(movieType);
        movieType.setBounds(230, 140, 202, 22);

        jLabel3.setBackground(new java.awt.Color(255, 204, 102));
        jLabel3.setText("Search a movie by type");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(260, 120, 134, 16);

        jLabel4.setBackground(new java.awt.Color(255, 204, 102));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Select the movie you want to buy tickets for then enter the number of tickets below:");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(12, 378, 530, 17);

        nbtickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nbticketsActionPerformed(evt);
            }
        });
        getContentPane().add(nbtickets);
        nbtickets.setBounds(140, 430, 151, 22);

        jLabel5.setText("Number of tickets:");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 430, 105, 16);

        paymentdue.setColumns(20);
        paymentdue.setRows(5);
        getContentPane().add(paymentdue);
        paymentdue.setBounds(140, 470, 150, 30);

        jLabel6.setText("You have paid:");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 470, 85, 16);

        jButton1.setText("Buy Tickets");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(317, 426, 97, 25);

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(570, 470, 59, 25);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoppingmall/39.jpg"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(0, 0, 710, 525);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void movieNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movieNameKeyTyped
        // TODO add your handling code here:
        movie_search_title();
    }//GEN-LAST:event_movieNameKeyTyped

    private void movieTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movieTypeKeyTyped
        // TODO add your handling code here:
        movie_search_type();
    }//GEN-LAST:event_movieTypeKeyTyped

    private void nbticketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nbticketsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nbticketsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        buyticket();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        MovieMenu mmenu = new MovieMenu(username);
        mmenu.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieSearch().setVisible(true);
            }
        });
    }
     
private void connectDb() {
    try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            //java.io.File file  = new java.io.File("UserPass.txt");
            //Scanner input = new Scanner (file);
            //String username = input.nextLine();
            //System.out.println(username);
            //String password = input.nextLine();
            //System.out.println(password);
            connectionUrl = "jdbc:mysql://localhost/shoppingmall?serverTimezone=UTC&" + "user=" + "root" + "&password=" + "root";
            con = DriverManager.getConnection(connectionUrl);
            stmt = con.createStatement();
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
        catch (ClassNotFoundException cE) {
            System.out.println("Class Not Found Exception: "+ cE.toString());
        }
    }

    private void movie_search_title() {
        try{
            DefaultTableModel model = (DefaultTableModel) movieinfo_table.getModel();
            model.setRowCount(0);
            String mov_name = movieName.getText();
            String query = "SELECT CM.movie_title, movie_type, age_requirement, ticket_fee, movie_date, start_time, end_time " +
                    "FROM cinema_movie CM JOIN movie_showtimes MS ON CM.movie_title = MS.movie_title WHERE CM.movie_title LIKE'"+mov_name+"%'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String movietitle = rs.getString(1);
                String movie_type= rs.getString(2);
                String age_requirement = rs.getString(3);
                String ticket_fee = rs.getString(4);
                String movie_date = rs.getString(5);
                String start_time = rs.getString(6);
                String end_time = rs.getString(7);
                model.addRow(new Object[]{movietitle, movie_type, age_requirement, ticket_fee, movie_date, start_time, end_time});
                movieinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void movie_search_type() {
        try{
            DefaultTableModel model = (DefaultTableModel) movieinfo_table.getModel();
            model.setRowCount(0);
            String mov_type = movieType.getText();
            String query = "SELECT CM.movie_title, movie_type, age_requirement, ticket_fee, movie_date, start_time, end_time " +
                    "FROM cinema_movie CM JOIN movie_showtimes MS ON CM.movie_title = MS.movie_title WHERE CM.movie_type LIKE'"+mov_type+"%'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String movietitle = rs.getString(1);
                String movie_type= rs.getString(2);
                String age_requirement = rs.getString(3);
                String ticket_fee = rs.getString(4);
                String movie_date = rs.getString(5);
                String start_time = rs.getString(6);
                String end_time = rs.getString(7);
                model.addRow(new Object[]{movietitle, movie_type, age_requirement, ticket_fee, movie_date, start_time, end_time});
                movieinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void buyticket() {
        try{
            int age_requirement = 0, myage=0;
            float mycash=0, ticket_fee=0;
            Date dob=null;
            
            int row = movieinfo_table.getSelectedRow();
            String moviechosen = movieinfo_table.getModel().getValueAt(row, 0).toString();

            String query = "SELECT age_requirement,ticket_fee FROM CINEMA_MOVIE WHERE movie_title = '"+moviechosen+"'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                age_requirement = rs.getInt(1); 
                ticket_fee = rs.getFloat(2);
            }
            query = "SELECT date_of_birth FROM visitor WHERE visitor_username = '"+username+"'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                dob = rs.getDate(1); 
            }
            Calendar calendar = new GregorianCalendar();
            calendar.setTime(dob);
            int birthyear = calendar.get(Calendar.YEAR);
            int age = 2020-birthyear;
            if (age_requirement > age){
                JOptionPane optionPane = new JOptionPane("You are under the age requirement. Please choose another movie.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            
            query = "SELECT visitor_username " +
                        "FROM ticket_purchase " + 
                        "WHERE visitor_username = '" + username + "' AND movie_title = '" + moviechosen + "'";
                rs = stmt.executeQuery(query);
                int count2=0;
                String hasbought=null;
                while (rs.next()) {
                    hasbought = rs.getString(1);
                    
                    if (hasbought.equals(username))
                    {
                        count2++;
                    }
                }

            if (count2==1) {
                JOptionPane optionPane = new JOptionPane("You cannot buy tickets for the same movie twice.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            
            query = "SELECT cash_balance " +
                            "FROM visitor " + 
                            "WHERE visitor_username = '" + username + "'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                mycash = rs.getFloat(1);
            }
            String tickets_nb_str = nbtickets.getText();
            int tickets_nb = Integer.parseInt(tickets_nb_str);
            float payment_due = (float) ticket_fee*tickets_nb;

            if (payment_due > mycash) {
                JOptionPane optionPane = new JOptionPane("You do not have enough cash to buy tickets. Please recharge your cash balance.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            String s=String.valueOf(payment_due);  
            paymentdue.setText(s);
            String insert = "INSERT INTO ticket_purchase (visitor_username, movie_title, points_gained, tickets_nb) VALUES " +
                     "('" + username + "', '" + moviechosen + "', " + 10*tickets_nb + ", " + tickets_nb + ")";         
            int temp = stmt.executeUpdate(insert);
            
            String update = "UPDATE visitor " +
                    "SET cash_balance = cash_balance - " + payment_due + " " +
                    "WHERE visitor_username = '" + username + "' AND cash_balance >= " + payment_due;
            temp = stmt.executeUpdate(update);
            
            update = "UPDATE visitor " +
                    "SET loyalty_points = loyalty_points + " + 10*tickets_nb + " " +
                    "WHERE visitor_username = '" + username + "'";
            temp = stmt.executeUpdate(update);
            
            JOptionPane optionPane = new JOptionPane("You have successfuly bought tickets!");
                JDialog dialog = optionPane.createDialog("SUCCESS!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField movieName;
    private javax.swing.JTextField movieType;
    private javax.swing.JTable movieinfo_table;
    private javax.swing.JTextField nbtickets;
    private javax.swing.JTextArea paymentdue;
    // End of variables declaration//GEN-END:variables
}
