/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoppingmall;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static shoppingmall.MainMenu.username;
import static shoppingmall.PlaygroundMenu.username;


/**
 *
 * @author MH
 */
public class Parking extends javax.swing.JFrame {
    public static String connectionUrl;
    public static Connection con = null;
    public static java.sql.Statement stmt = null;

    /**
     * Creates new form Parking
     */
    
    public static String username=null;
    
    public Parking() {
        initComponents();
         setSize(745,450);
        connectDb();
        ListCarwashServices();
    }
    
    public Parking(String myusername) {
        username = myusername;
        System.out.println("This is Parking, your username is: "+username);
        initComponents();
         setSize(745,450);
        connectDb();
        ListCarwashServices();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hourcame = new javax.swing.JTextField();
        mincame = new javax.swing.JTextField();
        hourleft = new javax.swing.JTextField();
        minleft = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        payment_textArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        carwash_comboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        carwash_table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel2.setText("Enter the time you visited the mall");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(80, 90, 195, 16);

        jLabel3.setText("Enter the time you left the mall");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(80, 210, 177, 16);
        getContentPane().add(hourcame);
        hourcame.setBounds(80, 140, 65, 22);
        getContentPane().add(mincame);
        mincame.setBounds(160, 140, 67, 22);
        getContentPane().add(hourleft);
        hourleft.setBounds(80, 250, 64, 22);
        getContentPane().add(minleft);
        minleft.setBounds(160, 250, 67, 22);

        jLabel4.setText("HH");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(80, 120, 30, 16);

        jLabel5.setText("MM");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(160, 120, 30, 16);

        jLabel6.setText("HH");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(80, 230, 30, 16);

        jLabel7.setText("MM");
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(160, 230, 30, 16);

        payment_textArea.setColumns(20);
        payment_textArea.setRows(5);
        getContentPane().add(payment_textArea);
        payment_textArea.setBounds(70, 370, 164, 28);

        jLabel8.setText("The amount you have to pay for parking is:");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(70, 350, 247, 16);

        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(230, 310, 63, 27);

        carwash_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hand Wash", "Interior Clean", "Rubber Mats Wash", "Self Service", "Automated Tunnel", "Inside-Out Jets", "Interior Vaccuming", "UV Cleaning", "Hose-Down", "Outside Waxing", "Waterless Wash", "Steaming", "Glass Cleaning", "Ultra-Cleaning", " " }));
        getContentPane().add(carwash_comboBox);
        carwash_comboBox.setBounds(410, 290, 133, 22);

        jLabel9.setText("Choose the car service you want:");
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(410, 270, 191, 16);

        jButton2.setText("Choose");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(580, 290, 80, 25);

        carwash_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service Type", "Fee"
            }
        ));
        jScrollPane1.setViewportView(carwash_table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(410, 100, 319, 137);

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(660, 380, 59, 25);

        jLabel10.setBackground(new java.awt.Color(255, 204, 102));
        jLabel10.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("PAY FOR PARKING");
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10);
        jLabel10.setBounds(80, 30, 226, 33);

        jLabel11.setBackground(new java.awt.Color(255, 204, 102));
        jLabel11.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("CARWASH SERVICES");
        jLabel11.setOpaque(true);
        getContentPane().add(jLabel11);
        jLabel11.setBounds(430, 30, 252, 33);

        jLabel12.setBackground(new java.awt.Color(255, 204, 102));
        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel12.setText("The fee per hour for the parking is 3$.");
        jLabel12.setOpaque(true);
        getContentPane().add(jLabel12);
        jLabel12.setBounds(30, 60, 343, 22);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoppingmall/51.jpg"))); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(0, 0, 750, 430);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PayForTicket();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        PayForCarwash();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        MainMenu menu = new MainMenu(username);
        menu.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Parking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Parking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Parking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Parking().setVisible(true);
            }
        });

    }
    
    private void connectDb () {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            //java.io.File file  = new java.io.File("UserPass.txt");
            //Scanner input = new Scanner (file);
            //String username = input.nextLine();
            //System.out.println(username);
            //String password = input.nextLine();
            //System.out.println(password);
            connectionUrl = "jdbc:mysql://localhost/shoppingmall?serverTimezone=UTC&" + "user=" + "root" + "&password=" + "root";
            con = DriverManager.getConnection(connectionUrl);
            stmt = con.createStatement();
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
        catch (ClassNotFoundException cE) {
            System.out.println("Class Not Found Exception: "+ cE.toString());
        }
    }
    
    private void PayForTicket() {
        try{
            String mycash_str= null, payed_val=null;
            
            String hour_came_str = hourcame.getText();
            int hour_came = Integer.parseInt(hour_came_str);

            String min_came_str = mincame.getText();
            int min_came = Integer.parseInt(min_came_str);

            String hour_left_str = hourleft.getText();
            int hour_left = Integer.parseInt(hour_left_str);

            String min_left_str = minleft.getText();
            int min_left = Integer.parseInt(min_left_str);

            float totaltime = (float)((hour_left - hour_came)*60 + min_came + min_left)/60;
            float payment_due = 3*totaltime;
            
            String query = "SELECT cash_balance " +
                            "FROM visitor " + 
                            "WHERE visitor_username = '" + username + "'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                mycash_str = rs.getString(1);
            }  
            float mycash = Float.parseFloat(mycash_str);

            if (payment_due > mycash) {
                JOptionPane optionPane = new JOptionPane("You do not have enough cash to pay for the parking. Kindly recharge your cash balance.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }

            String payment_due_str = Float.toString(payment_due);
            payment_textArea.setText(payment_due_str);
            
            String insert = "INSERT INTO parking_ticket (visitor_username, nb_hours) VALUES " +
                     "('" + username + "', " + totaltime + ")";         
            int temp = stmt.executeUpdate(insert);
            
            String update = "UPDATE visitor " +
                    "SET cash_balance = cash_balance - " + payment_due + " " +
                    "WHERE visitor_username = '" + username + "' AND cash_balance >= " + payment_due;
            temp = stmt.executeUpdate(update);
            
            JOptionPane optionPane = new JOptionPane("You have successfuly payed for the parking!");
            JDialog dialog = optionPane.createDialog("SUCCESS!");
            dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
            dialog.setVisible(true);
            
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    public void ListCarwashServices() {
        try{
            DefaultTableModel model = (DefaultTableModel) carwash_table.getModel();
            model.setRowCount(0);
            String query = "SELECT * " +
                            "FROM carwash_services " + 
                            "ORDER BY type_fee ASC";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String service_type = rs.getString(1);
                String type_fee = rs.getString(2);
                model = (DefaultTableModel) carwash_table.getModel();
                model.addRow(new Object[]{service_type, type_fee});
                carwash_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void PayForCarwash() {
        try{
            String mycash_str= null, payment_due_str=null, service_type=null;
             
            String query = "SELECT cash_balance " +
                            "FROM visitor " + 
                            "WHERE visitor_username = '" + username + "'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                mycash_str = rs.getString(1);
            }  
            float mycash = Float.parseFloat(mycash_str);
               
            Object selectedItem = carwash_comboBox.getSelectedItem();
            if (selectedItem != null) 
                service_type = selectedItem.toString();
            
            query = "SELECT type_fee " +
                            "FROM carwash_services " + 
                            "WHERE service_type = '" + service_type + "'";
            rs = stmt.executeQuery(query);
            
            while (rs.next()) {
                payment_due_str = rs.getString(1);
            }
            float payment_due = Float.parseFloat(payment_due_str);
            
            if (payment_due > mycash) {
                JOptionPane optionPane = new JOptionPane("You do not have enough cash to pay for the carwash service.");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            else {
                JOptionPane optionPane = new JOptionPane("You have successfuly payed for the carwash services!");
                JDialog dialog = optionPane.createDialog("SUCCESS!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);

            }
          
            
            String insert = "INSERT INTO wash_visitor_car (visitor_username, service_type) VALUES " +
                     "('" + username + "', '" + service_type + "')";         
            int temp = stmt.executeUpdate(insert);
            
            String update = "UPDATE visitor " +
                    "SET cash_balance = cash_balance - " + payment_due + " " +
                    "WHERE visitor_username = '" + username + "' AND cash_balance >= " + payment_due;
            temp = stmt.executeUpdate(update);
            
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> carwash_comboBox;
    private javax.swing.JTable carwash_table;
    private javax.swing.JTextField hourcame;
    private javax.swing.JTextField hourleft;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mincame;
    private javax.swing.JTextField minleft;
    private javax.swing.JTextArea payment_textArea;
    // End of variables declaration//GEN-END:variables
}
