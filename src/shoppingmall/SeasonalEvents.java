/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoppingmall;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static shoppingmall.RestaurantMenu.username;
import static shoppingmall.SeasonalEventMenu.username;

/**
 *
 * @author MH
 */
public class SeasonalEvents extends javax.swing.JFrame {
        public static String connectionUrl;
        public static Connection con = null;
        public static Statement stmt = null;

    /**
     * Creates new form SeasonalEvents
     */
        
    public static String username=null;
        
    public SeasonalEvents() {
        initComponents();
         setSize(880,705);
        connectDb();
        EventListbyName();
    }
    
    public SeasonalEvents(String myusername) {
        username = myusername;
        System.out.println("This is SeasonalEvents, your username is: "+username);
        initComponents();
         setSize(880,705);
        connectDb();
        EventListbyName();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        eventinfo_table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cat_comboBox = new javax.swing.JComboBox<>();
        audience_comboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        movie = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dateinfo_table = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        eventinfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Category", "Event Description", "Targeted Audience"
            }
        ));
        jScrollPane1.setViewportView(eventinfo_table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(100, 70, 665, 161);

        jLabel2.setBackground(new java.awt.Color(255, 204, 102));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("You can filter the events by choosing the category of your choice:");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(110, 250, 410, 17);

        jLabel3.setBackground(new java.awt.Color(255, 204, 102));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("You can filter the event by selecting the target audience of you choice:");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(110, 300, 440, 17);

        cat_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "movie premiere", "kiosk", "parade" }));
        getContentPane().add(cat_comboBox);
        cat_comboBox.setBounds(540, 250, 117, 22);

        audience_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kids", "adults", "teens" }));
        getContentPane().add(audience_comboBox);
        audience_comboBox.setBounds(590, 300, 61, 22);

        jButton1.setText("Choose");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(670, 250, 75, 25);

        jButton2.setText("Choose");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(670, 300, 75, 25);

        movie.setColumns(20);
        movie.setRows(5);
        getContentPane().add(movie);
        movie.setBounds(390, 400, 284, 28);

        jLabel1.setBackground(new java.awt.Color(255, 204, 102));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("If an event is a movie premiere, you can select it to see which movie it promotes!");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(190, 370, 500, 17);

        jButton3.setText("Find promoted movie");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(210, 400, 153, 25);

        dateinfo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Date"
            }
        ));
        jScrollPane2.setViewportView(dateinfo_table);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(210, 500, 452, 130);

        jButton4.setText("List dates");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(640, 460, 87, 25);

        jLabel5.setBackground(new java.awt.Color(255, 204, 102));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("To find the dates an event will be held, select the event and click on the following button:");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(90, 460, 541, 17);

        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(790, 610, 59, 25);

        jLabel6.setBackground(new java.awt.Color(255, 204, 102));
        jLabel6.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("SEASONAL EVENTS");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(300, 20, 240, 33);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoppingmall/19.jpg"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, -30, 880, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        EventListbyCat();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        EventListbyAudience();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ShowMoviePromoted();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        EventListDate();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        SeasonalEventMenu semenu = new SeasonalEventMenu(username);
        semenu.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeasonalEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeasonalEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeasonalEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeasonalEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeasonalEvents().setVisible(true);
            }
        });
    }
    
    private void connectDb () {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            //java.io.File file  = new java.io.File("UserPass.txt");
            //Scanner input = new Scanner (file);
            //String username = input.nextLine();
            //System.out.println(username);
            //String password = input.nextLine();
            //System.out.println(password);
            connectionUrl = "jdbc:mysql://localhost/shoppingmall?serverTimezone=UTC&" + "user=" + "root" + "&password=" + "root";
            con = DriverManager.getConnection(connectionUrl);
            stmt = con.createStatement();
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
        catch (ClassNotFoundException cE) {
            System.out.println("Class Not Found Exception: "+ cE.toString());
        }
    }
    
    private void EventListbyName(){
        try{
            DefaultTableModel model = (DefaultTableModel) eventinfo_table.getModel();
            model.setRowCount(0);
            String query = "SELECT event_name, category, event_description, targeted_audience FROM seasonal_event ORDER BY event_name";
            ResultSet rs = stmt.executeQuery(query);
            
            while (rs.next()) {
                String eventname = rs.getString(1);
                String category = rs.getString(2);
                String desc = rs.getString(3);
                String targetedaud = rs.getString(4);
                model = (DefaultTableModel) eventinfo_table.getModel();
                model.addRow(new Object[]{eventname, category, desc, targetedaud});
                eventinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void EventListbyCat(){
        try{
            DefaultTableModel model = (DefaultTableModel) eventinfo_table.getModel();
            model.setRowCount(0);
            String chosencat=null;
            Object selectedItem = cat_comboBox.getSelectedItem();
            if (selectedItem != null) 
                chosencat = selectedItem.toString();
            String query = "SELECT event_name, category, event_description, targeted_audience FROM seasonal_event WHERE category = '" + chosencat + "' ORDER BY event_name";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String eventname = rs.getString(1);
                String category = rs.getString(2);
                String desc = rs.getString(3);
                String targetedaud = rs.getString(4);
                model = (DefaultTableModel) eventinfo_table.getModel();
                model.addRow(new Object[]{eventname, category, desc, targetedaud});
                eventinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void EventListbyAudience(){
        try{
            DefaultTableModel model = (DefaultTableModel) eventinfo_table.getModel();
            model.setRowCount(0);
            String chosenaud=null;
            Object selectedItem = audience_comboBox.getSelectedItem();
            if (selectedItem != null) 
                chosenaud = selectedItem.toString();
            String query = "SELECT event_name, category, event_description, targeted_audience FROM seasonal_event WHERE targeted_audience = '" + chosenaud + "' ORDER BY event_name";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String eventname = rs.getString(1);
                String category = rs.getString(2);
                String desc = rs.getString(3);
                String targetedaud = rs.getString(4);
                model = (DefaultTableModel) eventinfo_table.getModel();
                model.addRow(new Object[]{eventname, category, desc, targetedaud});
                eventinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void ShowMoviePromoted(){
        try{
            int row = eventinfo_table.getSelectedRow();
            String eventchosen = eventinfo_table.getModel().getValueAt(row, 0).toString();
            String eventcatchosen = eventinfo_table.getModel().getValueAt(row, 1).toString();
            if (eventcatchosen.equals("movie premiere")) {
            }
            else {
                 JOptionPane optionPane = new JOptionPane("This is not a movie!");
                JDialog dialog = optionPane.createDialog("WARNING!");
                dialog.setAlwaysOnTop(this.isAlwaysOnTopSupported());
                dialog.setVisible(true);
                return;
            }
            
            String query = "SELECT movie_title FROM seasonal_event WHERE event_name = '" + eventchosen + "'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String movietitle = rs.getString(1);
                movie.setText(movietitle);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    private void EventListDate(){
        try{
            DefaultTableModel model = (DefaultTableModel) dateinfo_table.getModel();
            model.setRowCount(0);
            int row = eventinfo_table.getSelectedRow();
            String eventchosen = eventinfo_table.getModel().getValueAt(row, 0).toString();
            String query = "SELECT event_name, event_date FROM event_dates WHERE event_name = '" + eventchosen + "' ORDER BY event_date";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String eventname = rs.getString(1);
                String date = rs.getString(2);
                model = (DefaultTableModel) dateinfo_table.getModel();
                model.addRow(new Object[]{eventname, date});
                dateinfo_table.setModel(model);
            }
        }
        catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> audience_comboBox;
    private javax.swing.JComboBox<String> cat_comboBox;
    private javax.swing.JTable dateinfo_table;
    private javax.swing.JTable eventinfo_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea movie;
    // End of variables declaration//GEN-END:variables
}
